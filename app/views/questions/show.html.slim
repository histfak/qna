.question
  = render @question

.question-voting
  .question-scores
    br
    | Scores: #{@question.scores}

  .question-voting-links
    = render 'shared/voting_links', resource: @question

.question-subscribe
  - if can?(:create, Subscription) && !@question.subscription(current_user)
    p= link_to 'Subscribe', question_subscriptions_path(@question), method: :post
  - if can?(:destroy, @question.subscription(current_user)) && @question.subscription(current_user)
    p= link_to 'Unsubscribe', subscription_path(@question.subscription(current_user)), method: :delete

.question-comments
  - if @comments.exists?
    p Comments:
    = render @comments

.question-new-comment
  - if !current_user&.author_of?(@question) && user_signed_in?
    p= link_to 'Add comment', '#', class: 'comment-question-link', data: {question_id: @question.id}

    = render 'comments/comment_form', resource: @question

.question-errors

h3 Answers:
.no-answers-greetings
  - if @answers.empty?
    ' There is no answers. Be first!

.answers
  = render @answers

.answer-errors

- if user_signed_in?
  br
  = form_with model: [@question, @answer], class: 'new-answer' do |f|
    br
    b= f.label :body, "Your answer:"
    br
    = f.text_area :body
    br
    br
    = f.label :files, "Files: "
    = f.file_field :files, multiple: true
    br
    br
    .links
      = link_to_add_association 'Add link', f, :links, partial: 'shared/link_fields'
    br
    = f.submit 'Post answer'
